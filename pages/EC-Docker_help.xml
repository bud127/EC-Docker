<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="generator"
          content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
    <meta content="text/html; charset=us-ascii"
          http-equiv="content-type" />
					
<!-- Enter the new plugin name in the following line. -->				

    <title>ElectricFlow Plugin for Docker</title>
    <link rel="stylesheet"
          href="../../plugins/@PLUGIN_KEY@/pluginhelp.css"
          type="text/css"
          media="screen" />
</head>

<body>
    <div class="help">	

        <h1>EC-Docker</h1>	

        <p>Plugin Version @PLUGIN_VERSION@</p>

        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

				<!--If you are revising a plugin, enter the date when the current sprint will end.
				If you are writing the first version of a new plugin, change "Revised on" to "Created on" and 
				enter the date when the current sprint will end, and the document will be published.-->		
				
        <p>Revised on July 1, 2015</p>
				
				<h1>Contents</h1>
				
				<ul>
				<li><p><a href="#overview">Overview</a></p></li>
				<li><p><a href="#procedures">Plugin Procedures</a></p></li>
				<ul>
				<li><a href="#runDockerBuild">runDockerBuild</a></li>
				<li><a href="#runDockerPull">runDockerPull</a></li>
				<li><a href="#runDockerRun">runDockerRun</a></li>
	            </ul>
				<!--	
				
				</ul>
				<li><p><a href="#example">Examples and Use Cases</a></p></li>
				<ul>
				<li><a href="#UseCase1">UseCase1</a></li>
				</ul>
				
				-->
				
				<li><p><a href="#rns">Release Notes</a></p></li>
				</ul>
				
				<p>IMPORTANT: For all parameter descriptions in this document, required parameters are shown 
				in <span class='required'>bold italics</span>.</p>
				
		        <p>IMPORTANT: In the ElectricFlow UI, from the Home page, open the Main Menu, and 
				click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>
					
		    <!-- The next section is required. -->
				
				<h1 id="overview">Overview</h1>
				
				<!-- The integration description should answer the questions: 
				How deep does our integration go? Why should I care? 
				What general functionality does the plugin include? 
				What functionality does the plugin omit? -->
				
				<p>Docker is an open platform for developing, shipping, and running applications. 
				Docker is designed to deliver your applications faster. With Docker, you can separate 
				your applications from your infrastructure and treat your infrastructure like a 
				managed application. Docker helps you ship code faster, test faster, deploy faster, 
				and shorten the cycle between writing code and deploying it.</p>
						
                <p>With Docker, you can package an application will all its dependencies into a standardized unit 
				for software development. Containers wrap your application in a complete file system that has 
                everything it needs to run (code, runtime, system tools, libraries, and other components installed 
                on a server.  The result is an application that will run the same, regardless of the environment 
                on which it is running.</p>

        <!-- This section is required. Replace the plugin name, the URL to the website with the new plugin information, and the name of the link. -->	
			
			<p>For more information about Docker, go to the <a href="http://www.docker.com/">Docker home page</a>.</p>

        <h2>ElectricFlow Integration to EC-Docker</h2>
				
		<!-- The integration description should answer the questions:
        How deep does our integration go? Why should I care?
        What general functionality does the plugin include? 
				What functionality does the plugin omit? -->
				
			
            <p>Use this plugin with ElectricFlow to perform Docker build, pull, and run functions.</p> 
				
						
		<h2>Integrated Version</h2>
				
				

            <p>This plugin was tested against Docker Engine 1.7.</p>
				
			
		
	<!--There is no Configure link for EC-Docker on the Plugin Manager page.	
		
    <h1 id="setupconfig">Setting Up the Plugin Configuration</h1>

    -->	
				
		
	<h1 id="procedures">Plugin Procedures</h1>

     <div class="procedure" id="runDockerBuild">

     <a name='runDockerBuild' id="runDockerBuild"></a> 

     <h2>runDockerBuild</h2>
			
			<p>Use this procedure to build a Docker image. Docker can build images automatically from a source 
			
			repository using the instructions in a Dockerfile.</p>
	    
			<h3>Input</h3>
			
            <ol>
			
			<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			<li>Click <b>EC-Docker</b>.</li>
			<li>Click <b>runDockerBuild</b>.</li>
			<li>Enter the following parameters:<br />
			
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
				
				 <tr>
                        <td >Use sudo</td>
                        <td>When this parameter is selected, ElectricFlow uses sudo to run the Docker build.</td>
                    </tr>

                   <tr>
                         <td class='required'>Build path</td>
                        <td>Path to the source code.</td>
                    </tr>
					
                </tbody>
            </table>

				</li>
						
		<br />
		
		
		
		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild1.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. 
		</p>
		
		<!-- The Docker build was completed successfully.

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild2.png" />
		
		-->
				
		<p>In the <b>runDockerBuild</b> step, click the Log button to see the diagnostic information. 
		</p>	
		
		<!-- The output is similar to the following diagnostic report:

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild3.png" />
		
		-->
					
		</div>
		 
		 <!-- The next section is required for additional procedures. Replace [Procedure2} with the plugin procedure name in the following lines. -->	
		 
		 <div class="procedure" id="runDockerPull">

           <a name='runDockerPull' id="runDockerPull"></a> 

            <h2>runDockerPull</h2>

             <p>Use this procedure to make a Docker pull request to let others know aobut the changes you have pushed 
			 to the repository.</p>
	    
			<h3>Input</h3>
			
            <ol>
			
			<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			<li>Click <b>EC-Docker</b>.</li>
			<li>Click <b>runDockerPull</b>.</li>
			<li>Enter the following parameters:<br />
			
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
				
				    <tr>
                        <td >Use sudo</td>
                        <td>When this parameter is selected, ElectricFlow uses sudo to run the Docker pull request.</td>
                    </tr>

                    <tr>
                         <td class='required'>Image name</td>
                        <td>Image to pull from the Docker Hub, such as 2ac9d1098bf1, postgres, or committest.</td>
                    </tr>
					
					<tr>
                        <td >Image tag</td>
                        <td>Tag or label of the image in the Docker Hub, such as 2.1, 2.3.6, or latest.</td>
                    </tr>
					
                </tbody>
            </table>

				</li>
						
		<br />
		
		
		
		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerPull1.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. 
		</p>
		
		<!-- The Docker build was completed successfully.

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild2.png" />
		
		-->
				
		<p>In the <b>runDockerPull</b> step, click the Log button to see the diagnostic information. 
		</p>	
		
		<!-- The output is similar to the following diagnostic report:

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild3.png" />
		
		-->		
						
    </div>
	
	<div class="procedure" id="runDockerRun">

           <a name='runDockerRun' id="runDockerRun"></a> 

            <h2>runDockerRun</h2>

             <p>Use this procedure to run a process in an isolated container. Docker runs the process
			 in its own file system, network, and  isolated process tree. Starting with an image, Docker runs
             the process to create a container.</p>
	    
			<h3>Input</h3>
			
            <ol>
			
			<li>In the Main Menu, click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</li>
			<li>Click <b>EC-Docker</b>.</li>
			<li>Click <b>runDockerRun</b>.</li>
			<li>Enter the following parameters:<br />
			
            <table class="grid">
                <thead>
                    <tr>
                        <th>Parameter</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
				
				    <tr>
                        <td >Use sudo</td>
                        <td>When this parameter is selected, ElectricFlow uses sudo to run the Docker process.</td>
                    </tr>

                    <tr>
                        <td class='required'>Image name</td>
                        <td>Image from which the container is run, such as 2ac9d1098bf1, postgres, or committest.</td>
                    </tr>
					
					<tr>
                        <td>Container name</td>
                        <td>Name of the container: 
						<ul>
						<li>UUID long identifier (such as f78375b1c487e03c9438c729345e54db9d20cfa2ac1fc3494b6eb60872e74778)</li>
						<li>UUID short identifier (such as f78375b1c487)</li>
						<li>Name (such as admin)</li>
						</ul>
						</td>
                    </tr>
					
					<tr>
                        <td >Detached mode (-d)</td>
                        <td>Select this parameter to run the container in the background and print the new 
						container ID.</td>
                    </tr>
					
					<tr>
                        <td>Entrypoint</td>
                        <td>The default command to execute at runtime. When you enter a command for this parameter, 
						it overwrites the default entrypoint is set by the image. For example, the <b>/bin/bash example/redis</b> 
						command overwrites the default entrypoint.</td>
                    </tr>
					
					<tr>
                        <td>Container working directory</td>
                        <td>The working directory inside the container. such as /path/to/workdir. The default is 
						the root directory (/).</td>
                    </tr>
					
					<tr>
					    <td>Publish ports</td>
                        <td>Use one of the following formats to publish the container's port to the host: 
						<ul>
						<li>IP_address:hostPort:containerPort</li>
						<li>IP_address::containerPort</li>
						<li>IP_address:containerPort</li>
						<li>containerPort</li>
						</ul>
						<p>Use spaces to delimit port mappings, such as "2666:1666:8088:8080".</p>
						</td>  
                    </tr>
					
					<tr>
                        <td>Publish all ports</td>
                        <td>Select this parameter to publish all exposed ports to the host interfaces.</td>
                    </tr>
					
					<tr>
                        <td>Publish all ports</td>
                        <td>Select this parameter to give extended privileges to this container.</td>
                    </tr>
					
					<tr>
                        <td>Link</td>
                        <td>The link to another container using the Name-or-ID:alias format.</td>
                    </tr>
					
					<tr>
                        <td>Command with args</td>
                        <td>Command to run within the container.</td>
                    </tr>
					
                </tbody>
            </table>

				</li>
						
		<br />
				
		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerRun1.png" />
		<br />

		</ol>   
						
		<h3>Output</h3>
						
		<p>After the job runs, you can view the results on the Job Details page in ElectricFlow. 
		</p>
		
		<!-- The Docker build was completed successfully.

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild2.png" />
		
		-->
				
		<p>In the <b>runDockerRun</b> step, click the Log button to see the diagnostic information. 
		</p>	
		
		<!-- The output is similar to the following diagnostic report:

		<img src="../../plugins/@PLUGIN_KEY@/images/runDockerBuild3.png" />
		
		-->		
						
    </div>


       
			 
	<h1 id="rns">Release Notes</h1>
				
				<!-- For each release, create an h2 section describing new and revised procedures, enhancements, and JIRA fixes. 
				See the following examples for how to write the release note items, which include: 
				- Phrases starting with "Added the N procedure to ...", "Removed the X parameter from the ...", "Fixed the issue where  ...", 
				and so on. 
				- Descriptions of new features or functionality supported by the plugin.
				-->

        <h2>EC-Docker-1.0.0</h2>

        <ul>

            <li>Introduced the EC-Docker plugin.</li>
						
        </ul>

    </div>

   </body>
		
</html>

