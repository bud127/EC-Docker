<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta name="generator"
          content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
    <meta content="text/html; charset=us-ascii"
          http-equiv="content-type" />

<!-- Enter the new plugin name in the following line. -->

    <title>ElectricFlow Plugin for Docker</title>
    <link rel="stylesheet"
          href="../../plugins/@PLUGIN_KEY@/pluginhelp.css"
          type="text/css"
          media="screen" />
</head>

<body>
    <div class="help">

        <h1>EC-Docker</h1>

        <p>Plugin Version @PLUGIN_VERSION@</p>

        <hr style="margin-left: -10px; margin-top: 10px; height: 1px; width: 100%; color: #5981BD;" noshade="noshade" />

				<!--If you are revising a plugin, enter the date when the current sprint will end.
				If you are writing the first version of a new plugin, change "Revised on" to "Created on" and
				enter the date when the current sprint will end, and the document will be published.-->

				<h1>Contents</h1>

				<ul>
    				<li><p><a href="#overview">Overview</a></p></li>
                    <li><p><a href="#setupconfig">Plugin Configuration</a></p></li>
    				<li><p><a href="#procedures">Plugin Procedures</a></p></li>
    				<ul>
    				<li><a href="#ProvisionCluster">Check Cluster</a></li>
    				<li><a href="#DeployService">Deploy Service</a></li>
	            </ul>
				<!--

				</ul>
				<li><p><a href="#example">Examples and Use Cases</a></p></li>
				<ul>
				<li><a href="#UseCase1">UseCase1</a></li>
				</ul>

				-->

				<li><p><a href="#rns">Release Notes</a></p></li>
				</ul>

				<p>IMPORTANT: For all parameter descriptions in this document, required parameters are shown
				in <span class='required'>bold italics</span>.</p>

		        <p>IMPORTANT: In the ElectricFlow UI, from the Home page, open the Main Menu, and
				click <b>Admin</b> > <b>Plugins</b> to open the Plugin Manager.</p>

		    <!-- The next section is required. -->

				<h1 id="overview">Overview</h1>

				<!-- The integration description should answer the questions:
				How deep does our integration go? Why should I care?
				What general functionality does the plugin include?
				What functionality does the plugin omit? -->

				<p>Docker is an open platform for developing, shipping, and running applications.
				Docker is designed to deliver your applications faster. With Docker, you can separate
				your applications from your infrastructure and treat your infrastructure like a
				managed application. Docker helps you ship code faster, test faster, deploy faster,
				and shorten the cycle between writing code and deploying it.</p>

                <p>With Docker, you can package an application will all its dependencies into a standardized unit
				for software development. Containers wrap your application in a complete file system that has
                everything it needs to run (code, runtime, system tools, libraries, and other components installed
                on a server.  The result is an application that will run the same, regardless of the environment
                on which it is running.</p>

                <p>For more information about Docker, go to the <a href="http://www.docker.com/">Docker home page</a>.</p>

                <p>Plugin also supports Docker engines in swarm mode. The cluster management and orchestration features embedded in the Docker Engine are built using SwarmKit. A swarm is a cluster of Docker engines, or nodes, where you deploy services. When you create a service, you specify which container image to use and which commands to execute inside running containers.</p>

                <p>More information about Docker swarm can be found at <a href="https://docs.docker.com/engine/swarm/key-concepts/">Docker swarm key concepts</a>.</p>
        <!-- This section is required. Replace the plugin name, the URL to the website with the new plugin information, and the name of the link. -->

			

        <h2>ElectricFlow Integration to EC-Docker</h2>

		<!-- The integration description should answer the questions:
        How deep does our integration go? Why should I care?
        What general functionality does the plugin include?
				What functionality does the plugin omit? -->


            <p>Use this plugin with ElectricFlow to perform Docker build, pull, and run functions.</p>
            <p>Plugin also supports deployment of multiple services to Docker swarm cluster. The TLS mutual authentication and encryption is supported between swarm manager and the Flow agent running the plugin.</p>


		<h2>Integrated Version</h2>



            <p>This plugin was tested against Docker Engine 17.06.</p>

        <h2>Prerequists for Docker swarm Procedures</h2>
            <p>The swarm cluster must be already setup and swarm manager must be accessible over network.</p>
            <p>In case of swarm manager supporting TLS based authentication, CA certificate (CA's public key), client's public and private keys are required. All three keys can be stored in plugin configuration.More information about how to setup TLS certificates on swarm cluster can be found <a href="https://github.com/docker/docker.github.io/blob/master/swarm/configure-tls.md">here</a>.</p>

	
    <h1 id="setupconfig">Plugin Configuration</h1>

                <p>Plugin configurations are sets of parameters that apply across some or all of the plugin procedures. They reduce repetition of common values, create predefined parameter sets for end users, and securely store credentials where needed. Each configuration is given a unique name that is entered in designated parameters on procedures that use them.<br /><br />
                </p>


                <h3>Creating Plugin Configurations</h3>
                <p>To create plugin configurations in ElectricFlow, do these steps:</p>
                
                <li>Go to <b>Administration</b> &gt; <b>Plugins</b> to open the Plugin Manager.</li>
                    <li>Find the EC-Docker row.</li>
                    <li>Click <b>Configure</b> to open the
                    Docker Configurations page.</li>
                    <li>Click <b>Create Configuration</b>.</li>
                    <li>For communicating with Docker swarm cluster, you need <br/>
                    <ul type="square">
                        <li>1. The swarm manager endpoint (For example, tcp://swarmmanager.example.com:2376)</li>
                        <li>2. TLS certificates in case of cert based authentication with swarm manager.  
                        </li>
                    </ul>
                </li>



	<h1 id="procedures">Plugin Procedures</h1>

     <div class="procedure" id="ProvisionCluster">

     <a name='ProvisionCluster' id="ProvisionCluster"></a>

     <p>Please note that some of names given in ElectricFlow UI will be modified to comply with the naming conventions of Docker. Specifically characters such as "space , _ " will be converted to "-". Such parameters are marked with an asterisk (*).</p>
     <h2>Check Cluster</h2>

			<p>The procedure checks if the cluster exists and is reachable with provided details.</p>

			<h3>Check Cluster Parameters</h3>
                <table class="grid">
                    <thead>
                        <tr>
                            <th>Parameter</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="required">Configuration</td>
                            <td>The name of an existing configuration which holds all the connection information for the Kubernetes cluster.</td>
                        </tr>

                    </tbody>
                </table>
            </div>  
            <div id="DeployService">
                <h2>Deploy Service</h2>
                <p>This procedure deploys a service and application to a already provisioned cluster</p>
                <h3>Depoy Service Parameters</h3>
                <table class="grid">
                    <thead>
                        <tr>
                            <th>Parameter</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="required">Service Name*</td>
                            <td>The name of the service in Deploy that encapsulates the service to be deployed on the Kubernetes cluster.</td>
                        </tr>
                        <tr>
                            <td class="required">Service Project Name</td>
                            <td>The name of the project that the service belongs to. In case of an application-level service it also owns the application.</td>
                        </tr>
                        <tr>
                            <td>Application Name</td>
                            <td>The name of the application that the service belongs to. Not applicable for a top-level service.</td>
                        </tr>
                        <tr>
                            <td>Application Revision ID</td>
                            <td>Revision Id of the application version that the service belongs to.</td>
                        </tr>  
                        <tr>
                            <td>Cluster Name</td>
                            <td>The name of the cluster in Deploy that encapsulates the Kubernetes cluster on which the service is to be deployed.</td>
                        </tr>                        
                        <tr>
                            <td>Cluster or environment project name</td>
                            <td>The name of the project that the cluster belongs to if it is a top-level project cluster. Or the name of the project that the environment belongs to if it is an environment-scoped cluster.</td>
                        </tr>
                        <tr>
                            <td>Environment Name</td>
                            <td>The name of the environment that the cluster belongs to. Not applicable for a top-level project cluster.</td>
                        </tr>
                    </tbody>
                </table>
            </div>          

		
        </div>
   </body>

</html>

